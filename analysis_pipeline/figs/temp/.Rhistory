theme(legend.position="none", background = "none")
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label, x=0.15, y=0.25),
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
heme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label, x=0.15, y=0.25),
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label, x=0.15, y=0.25),
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none")
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label, x=0.15, y=0.25),
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label, x=0.15, y=0.25),
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label, x=0.15, y=0.25),
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label, x=MIN, y=MIN),
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=-Inf, y=Inf, hjust=-0.2, vjust=1.2,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=-0.2, vjust=1.2,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=0.2, vjust=-1.2,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggsave(filename="compare_activation_E1_E2.jpg", width=9, height=6)
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=0.2, vjust=0,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggsave(filename="compare_activation_E1_E2.jpg", width=9, height=6)
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=0.2, vjust=0.4,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggsave(filename="compare_activation_E1_E2.jpg", width=9, height=6)
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=0.2, vjust=-0.4,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggsave(filename="compare_activation_E1_E2.jpg", width=9, height=6)
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=-0.2, vjust=-0.5,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggsave(filename="compare_activation_E1_E2.jpg", width=9, height=6)
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=0.6, vjust=-0.5,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggsave(filename="compare_activation_E1_E2.jpg", width=9, height=6)
# START HERE, PUT R VALUES ON GRAPH!!!! XXXXXXXXSTART HERE
#Statistics
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
size = 3, check_overlap = TRUE, angle = 10,
nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=1, vjust=-0.5,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggsave(filename="compare_activation_E1_E2.jpg", width=9, height=6)
# START HERE, PUT R VALUES ON GRAPH!!!! XXXXXXXXSTART HERE
#Statistics
library(ggrepel)
install.packages("ggrepel")
library(ggrepel)
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
#geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
#          size = 3, check_overlap = TRUE, angle = 10,
#          nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text_repel(aes(label = ROIName_noN), box.padding = unit(0.45, "lines")) +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=1, vjust=-0.5,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggsave(filename="compare_activation_E1_E2.jpg", width=9, height=6)
# START HERE, PUT R VALUES ON GRAPH!!!! XXXXXXXXSTART HERE
#Statistics
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
#geom_text(aes(label = ROIName_noN), vjust = 'inward', hjust = 'inward',
#          size = 3, check_overlap = TRUE, angle = 10,
#          nudge_x = 0.005, nudge_y = 0.005, color = "black") +
geom_text_repel(aes(label = ROIName_noN), box.padding = unit(0.45, "lines"),
size = 3, color="black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=1, vjust=-0.5,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggsave(filename="compare_activation_E1_E2.jpg", width=9, height=6)
# START HERE, PUT R VALUES ON GRAPH!!!! XXXXXXXXSTART HERE
#Statistics
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text_repel(aes(label = ROIName_noN), box.padding = unit(0.3, "lines"),
size = 3, color="black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=1, vjust=-0.5,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggsave(filename="compare_activation_E1_E2.jpg", width=9, height=6)
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text_repel(aes(label = ROIName_noN), box.padding = unit(0.3, "lines"),
size = 3, color="black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=1, vjust=-0.5,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggsave(filename="compare_activation_E1_E2.jpg", width=9, height=6)
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text_repel(aes(label = ROIName_noN), box.padding = unit(0.4, "lines"),
size = 3, color="black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=1, vjust=-0.5,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggsave(filename="compare_activation_E1_E2.jpg", width=9, height=6)
# START HERE, PUT R VALUES ON GRAPH!!!! XXXXXXXXSTART HERE
#
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text_repel(aes(label = ROIName_noN), box.padding = unit(0.4, "lines"),
size = 3, color="black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=1, vjust=-0.6,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggsave(filename="compare_activation_E1_E2.jpg", width=9, height=6)
cor(jokelits$Experiment1, jokelits$Experiment2, method="spearman")
ggplot(data=jokelits, aes(y=Experiment2, x=Experiment1, color = GroupLabel)) +
facet_wrap(~ GroupLabel, ncol=3, scales = "free") +
geom_smooth(method="lm", se=FALSE) +
geom_point() +
expand_limits(x = 0, y = 0) +
xlab('Joke>Non-Joke signal change, \nExperiment 1') +
ylab('Joke>Non-Joke signal change, \nExperiment 2') +
geom_text_repel(aes(label = ROIName_noN), box.padding = unit(0.4, "lines"),
size = 3, color="black") +
geom_text(data=cor_labels, aes(label=my_cor_label),
x=Inf, y=-Inf, hjust=1, vjust=-0.6,
colour="black", inherit.aes=FALSE, parse=FALSE) +
theme(legend.position="none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggsave(filename="compare_activation_E1_E2.jpg", width=9, height=6)
# START HERE,
main3 <- filter(jokelits, Group == 'ToM' | Group == 'RHLang' | Group == 'MDRight')
cor(main3$Experiment1, main3$Experiment2, method = "spearman")
allcors <- jokelits %>%
group_by(Group) %>%
summarize(cor(Experiment1, Experiment2, method = "spearman"))
cor(jokelits$Experiment1, jokelits$Experiment2, method="spearman")
main3 <- filter(jokelits, Group == 'ToM' | Group == 'RHLang' | Group == 'MDRight')
cor(main3$Experiment1, main3$Experiment2, method = "spearman")
allcors <- jokelits %>%
group_by(Group) %>%
summarize(cor(Experiment1, Experiment2, method = "spearman"))
cor(jokelits$Experiment1, jokelits$Experiment2, method="spearman")
localizer2task <- allSigChange %>%
filter(contrastName %in% c('joke-lit','H-E','S-N','bel-pho')) %>%
filter(task != 'JokesCustom') %>%
filter(ROIName != 'LocalizerAverage') %>%
mutate(taskType = ifelse(task == 'Jokes', 'Critical', 'Localizer')) %>%
select(-c(contrastName, task))
localizer2task <- allSigChange %>%
filter(contrastName %in% c('joke-lit','H-E','S-N','bel-pho')) %>%
filter(task != 'JokesCustom') %>%
filter(ROIName != 'LocalizerAverage') %>%
mutate(taskType = ifelse(task == 'Jokes', 'Critical', 'Localizer'))
m1 <- lmer(sigChange ~ taskType*Group + (1|ROIName) + (taskType|SubjectNumber), data = localizer2task)
m0 <- lmer(sigChange ~ taskType+Group + (1|ROIName) + (taskType|SubjectNumber), data = localizer2task)
anova(m1, m0)
loctaskstats <- aggregate(localizer2task$sigChange, by=list(localizer2task$Group,
localizer2task$taskType,
localizer2task$ROIName,
localizer2task$ROI), mean)
names(loctaskstats) = c('Group','taskType', 'ROIName', 'ROI','themean')
loctaskstats
mybootup = aggregate(localizer2task$sigChange, by=list(localizer2task$Group,
localizer2task$taskType,
localizer2task$ROIName,
localizer2task$ROI), bootup)
names(mybootup) = c('Group','taskType', 'ROIName', 'ROI', 'bootup')
mybootdown = aggregate(localizer2task$sigChange, by=list(localizer2task$Group,
localizer2task$taskType,
localizer2task$ROIName,
localizer2task$ROI), bootdown)
names(mybootdown) = c('Group','taskType', 'ROIName', 'ROI', 'bootdown')
loctaskstats = merge(loctaskstats,mybootup)
loctaskstats = merge(loctaskstats,mybootdown)
ggplot(data=loctaskstats, aes(x=ROIName, y=themean, fill=taskType)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=bootdown, ymax=bootup), colour="black", width=.1, position=position_dodge(.9)) +
xlab('') +
ylab(str_wrap('% signal change, Crit - Control', width=18)) +
facet_grid(~Group, scale='free_x', space='free_x')+
theme_bw()
ggplot(data=loctaskstats, aes(x=ROIName, y=themean, fill=taskType)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=bootdown, ymax=bootup), colour="black", width=.1, position=position_dodge(.9)) +
xlab('') +
ylab(str_wrap('% signal change, Crit - Control', width=18)) +
facet_grid(~Group, scale='free_x', space='free_x')+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_bw() +
theme(legend.key = element_blank()) +
theme(strip.background = element_blank()) +
theme(strip.text = element_blank())
ggplot(data=loctaskstats, aes(x=ROIName, y=themean, fill=taskType)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=bootdown, ymax=bootup), colour="black", width=.1, position=position_dodge(.9)) +
xlab('') +
ylab(str_wrap('% signal change, Crit - Control', width=18)) +
facet_grid(~Group, scale='free_x', space='free_x')+
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.key = element_blank()) +
theme(strip.background = element_blank()) +
theme(strip.text = element_blank())
ggplot(data=loctaskstats, aes(x=ROIName, y=themean, fill=taskType)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=bootdown, ymax=bootup), colour="black", width=.1, position=position_dodge(.9)) +
xlab('') +
ylab(str_wrap('% signal change, Crit - Control', width=18)) +
facet_grid(~Group, scale='free_x', space='free_x')+
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.key = element_blank())
ggplot(data=loctaskstats, aes(x=ROIName, y=themean, fill=taskType)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=bootdown, ymax=bootup), colour="black", width=.1, position=position_dodge(.9)) +
xlab('') +
ylab(str_wrap('% signal change, Crit - Control', width=18)) +
facet_grid(~Group, scale='free_x', space='free_x')+
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.key = element_blank()) +
theme(strip.background = element_blank())
ggplot(data=loctaskstats, aes(x=ROIName, y=themean, fill=taskType)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=bootdown, ymax=bootup), colour="black", width=.1, position=position_dodge(.9)) +
xlab('') +
ylab(str_wrap('% signal change, Crit - Control', width=18)) +
facet_grid(~Group, scale='free_x', space='free_x')+
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.key = element_blank()) +
theme(strip.background = element_blank()) +
ggsave(filename="localizer_to_critical_E2.jpg", width=9, height=6)
m1 <- lmer(sigChange ~ taskType*Group + (1|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','MDRight')))
m1 <- lmer(sigChange ~ taskType*Group + (1|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','MDRight')))
m1 <- lmer(sigChange ~ taskType*Group + (1|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','MDRight')))
m0 <- lmer(sigChange ~ taskType+Group + (1|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','MDRight')))
anova(m1, m0)
m1 <- lmer(sigChange ~ taskType*Group + (1|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','RHLang')))
m0 <- lmer(sigChange ~ taskType+Group + (1|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','RHLang')))
anova(m1, m0)
m1 <- lmer(sigChange ~ taskType*Group + (taskType|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','MDRight')))
m0 <- lmer(sigChange ~ taskType+Group + (taskType|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','MDRight')))
anova(m1, m0)
m1 <- lmer(sigChange ~ taskType*Group + (taskType|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','RHLang')))
m0 <- lmer(sigChange ~ taskType+Group + (taskType|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','RHLang')))
anova(m1, m0)
m1 <- lmer(sigChange ~ taskType*Group + (taskType|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','MDRight')))
m0 <- lmer(sigChange ~ taskType+Group + (taskType|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','MDRight')))
anova(m1, m0)
m1 <- lmer(sigChange ~ taskType*Group + (taskType|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','RHLang')))
m0 <- lmer(sigChange ~ taskType+Group + (taskType|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','RHLang')))
m1 <- lmer(sigChange ~ taskType*Group + (taskType|ROIName) + (1|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','RHLang')))
m0 <- lmer(sigChange ~ taskType+Group + (taskType|ROIName) + (1|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','RHLang')))
anova(m1, m0)
m1 <- lmer(sigChange ~ taskType*Group + (taskType|ROIName) + (1|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','MDRight')))
m0 <- lmer(sigChange ~ taskType+Group + (taskType|ROIName) + (1|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','MDRight')))
anova(m1, m0)
RHLmodel <- lmer(sigChange ~ taskType + (taskType|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group == 'RHLang'))
RHLmodel0 <- lmer(sigChange ~ 1 + (taskType|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group == 'RHLang'))
anova(RHLmodel, RHLmodel0)
m1 <- lmer(sigChange ~ taskType*Group + (taskType|ROIName) + (taskType|SubjectNumber), data = localizer2task)
m1 <- lmer(sigChange ~ taskType*Group + (taskType|ROIName) + (1|SubjectNumber), data = localizer2task)
m0 <- lmer(sigChange ~ taskType+Group + (taskType|ROIName) + (1|SubjectNumber), data = localizer2task)
m1 <- lmer(sigChange ~ taskType*Group + (1|ROIName) + (1|SubjectNumber), data = localizer2task)
m0 <- lmer(sigChange ~ taskType+Group + (1|ROIName) + (1|SubjectNumber), data = localizer2task)
anova(m1, m0)
m1 <- lmer(sigChange ~ taskType*Group + (taskType|ROIName) + (taskType|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','RHLang','MDRight')))
m1 <- lmer(sigChange ~ taskType*Group + (taskType|ROIName) + (1|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','RHLang','MDRight')))
m0 <- lmer(sigChange ~ taskType+Group + (taskType|ROIName) + (1|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','RHLang','MDRight')))
anova(m1, m0)
m1 <- lmer(sigChange ~ taskType*Group + (taskType|ROIName) + (1|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','MDRight')))
m0 <- lmer(sigChange ~ taskType+Group + (taskType|ROIName) + (1|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','MDRight')))
anova(m1, m0)
m1 <- lmer(sigChange ~ taskType*Group + (taskType|ROIName) + (1|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','RHLang')))
m0 <- lmer(sigChange ~ taskType+Group + (taskType|ROIName) + (1|SubjectNumber), data = filter(localizer2task, Group %in% c('ToM','RHLang')))
anova(m1, m0)
