setwd("/Users/mekline/Dropbox/_Projects/Jokes - fMRI/Jokes-Replication-Analysis/analysis_pipeline")
ToMROI.Names = c('DMPFC', 'LTPJ',  'MMPFC', 'PC',
'RTPJ',  'VMPFC', 'RSTS');
myResults = read.csv(paste(meansig_outputs_folder, 'ToMfROIS_resp_Jokes_preliminary_20170612.csv', sep=''))%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'ToM')
# %>%
# filter(ROIName !="VM PFC")
# allSigChange = rbind(allSigChange, myResults)
allSigChange = myResults
rm(list=ls(all=TRUE))
library(tidyr)
library(dplyr)
library(lme4)
myResults = read.csv(paste(meansig_outputs_folder, 'ToMfROIS_resp_Jokes_preliminary_20170612.csv', sep=''))%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'ToM')
# %>%
# filter(ROIName !="VM PFC")
# allSigChange = rbind(allSigChange, myResults)
allSigChange = myResults
meansig_outputs_folder = '/Users/mekline/Dropbox/_Projects/Jokes - fMRI/Jokes-Replication-Analysis/meansignal_outputs/'
myResults = read.csv(paste(meansig_outputs_folder, 'ToMfROIS_resp_Jokes_preliminary_20170612.csv', sep=''))%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'ToM')
# %>%
# filter(ROIName !="VM PFC")
# allSigChange = rbind(allSigChange, myResults)
allSigChange = myResults
ToMROI.Names = c('DMPFC', 'LTPJ',  'MMPFC', 'PC',
'RTPJ',  'VMPFC', 'RSTS');
#Hacky for prelim results!
myResults = read.csv(paste(meansig_outputs_folder, 'ToMfROIS_resp_Jokes_preliminary_20170612.csv', sep=''))%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'ToM')
# %>%
# filter(ROIName !="VM PFC")
# allSigChange = rbind(allSigChange, myResults)
allSigChange = myResults
#This takes the individual-subject contrast values and runs some nifty lmer models.  First #many
#lines are reading in the contrasts as in localizer_t_tests, fun stuff starts on line 105
rm(list=ls(all=TRUE))
library(tidyr)
library(dplyr)
library(lme4)
#Set wd!
setwd("/Users/mekline/Dropbox/_Projects/Jokes - fMRI/Jokes-Replication-Analysis/analysis_pipeline")
meansig_outputs_folder = '/Users/mekline/Dropbox/_Projects/Jokes - fMRI/Jokes-Replication-Analysis/meansignal_outputs/'
#######
# Read in all contrast values
#######
# Add in the contrast and ROI names so it's not just numbers!!!!!
RHLangROI.Names = c('RPostTemp', 'RAntTemp', 'RAngG', 'RIFG',      'RMFG',     'RIFGorb');
LangROI.Names = c('LPostTemp', 'LAntTemp', 'LAngG', 'LIFG',      'LMFG',     'LIFGorb');
MDROI.Names = c('LIFGop',  'RIFGop', 'LMFG',    'RMFG',    'LMFGorb',
'RMFGorb', 'LPrecG', 'RPrecG',  'LInsula', 'RInsula',
'LSMA',    'RSMA',   'LParInf', 'RParInf', 'LParSup',
'RParSup', 'LACC',   'RACC');
ToMROI.Names = c('DMPFC', 'LTPJ',  'MMPFC', 'PC',
'RTPJ',  'VMPFC', 'RSTS');
lang.contrasts = c('sent','non','sent-non')
revlang.contrasts = c('sent','non','non-sent')
md.contrasts = c()
tom.contrasts = c('bel','pho','bel-pho')
normal.contrasts = c('joke', 'lit', 'joke-lit')
custom.contrasts = c('low','med','high','other')
#Hacky for prelim results!
myResults = read.csv(paste(meansig_outputs_folder, 'ToMfROIS_resp_Jokes_preliminary_20170612.csv', sep=''))%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'ToM')
# %>%
# filter(ROIName !="VM PFC")
# allSigChange = rbind(allSigChange, myResults)
allSigChange = myResults
myResults = read.csv(paste(meansig_outputs_folder, 'ToMfROIS_resp_ToM_preliminary_20170612.csv')%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = tom.contrasts[Contrast])%>%
mutate(Group = 'ToM-toToM')
allSigChange = myResults
#Hacky for prelim results!
myResults = read.csv(paste(meansig_outputs_folder, 'ToMfROIS_resp_ToM_preliminary_20170612.csv'))%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = tom.contrasts[Contrast])%>%
mutate(Group = 'ToM-toToM')
allSigChange = myResults
#Hacky for prelim results!
myResults = read.csv(paste(meansig_outputs_folder, 'ToMfROIS_resp_ToM_preliminary_20170612.csv'),sep='')%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = tom.contrasts[Contrast])%>%
mutate(Group = 'ToM-toToM')
allSigChange = myResults
#Hacky for prelim results!
myResults = read.csv(paste(meansig_outputs_folder,'ToMfROIS_resp_ToM_preliminary_20170612.csv',sep=''))%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = tom.contrasts[Contrast])%>%
mutate(Group = 'ToM-toToM')
allSigChange = myResults
#Hacky for prelim results!
myResults = read.csv(paste(meansig_outputs_folder, 'ToMfROIS_resp_Jokes_preliminary_20170612.csv', sep=''))%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'ToM')
# %>%
# filter(ROIName !="VM PFC")
allSigChange = rbind(allSigChange, myResults)
allSigChange
ToMtoToM <- filter(allSigChange, Group == "ToM-toToM", contrastName == 'bel' | contrastName == 'pho')
m1 <- lmer(sigChange ~ contrastName + (contrastName|ROIName) + (contrastName|SubjectNumber), data = ToMtoToM)
m0 <- lmer(sigChange ~ 1 + (contrastName|ROIName) + (contrastName|SubjectNumber), data = ToMtoToM)
anova(m1,m0)
ToM <- filter(allSigChange, Group == "ToM", contrastName == 'joke' | contrastName == 'lit')
m1 <- lmer(sigChange ~ contrastName + (contrastName|ROIName) + (contrastName|SubjectNumber), data = ToM)
m0 <- lmer(sigChange ~ 1 + (contrastName|ROIName) + (contrastName|SubjectNumber), data = ToM)
anova(m1,m0)
allTests <- allSigChange %>%
group_by(Group)%>%
summarize(familySize = length(unique(ROI))) %>%
merge(allSigChange) %>%
group_by(Group, ROI, Contrast, ROIName, contrastName, familySize) %>%
summarise(t = t.test(sigChange, mu=0,alt='greater')$statistic,
p = t.test(sigChange, mu=0,alt='greater')$p.value) %>%
ungroup()%>%
group_by(Group, Contrast)%>%
mutate(p.adj = p.adjust(p, method="fdr", n=familySize[1]))%>%
ungroup()
allTests
View(allTests)
3e-03
filter(allTests, contrast='joke-lit')
filter(allTests, contrastName='joke-lit')
filter(allTests, contrastName=='joke-lit')
filter(allTests, contrastName=='bel-pho')
eff
ToMtoToM <- filter(allSigChange, Group == "ToM-toToM", contrastName == 'bel' | contrastName == 'pho')
m1 <- lmer(sigChange ~ contrastName + (contrastName|ROIName) + (contrastName|SubjectNumber), data = ToMtoToM)
m0 <- lmer(sigChange ~ 1 + (contrastName|ROIName) + (contrastName|SubjectNumber), data = ToMtoToM)
anova(m1,m0)
ToM <- filter(allSigChange, Group == "ToM", contrastName == 'joke' | contrastName == 'lit')
m1 <- lmer(sigChange ~ contrastName + (contrastName|ROIName) + (contrastName|SubjectNumber), data = ToM)
m0 <- lmer(sigChange ~ 1 + (contrastName|ROIName) + (contrastName|SubjectNumber), data = ToM)
anova(m1,m0)
#This file reads in ALL the %-signal-change values, per-participant, per-parcel, per-contrast,
# Those %-signal-change calculations are produced by the awesome toolbox analyses, and represent a single overall calculation
#derived for the whole parcel region (not individual voxels, as mk sometimes forgets)
rm(list = ls())
library(bootstrap)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
setwd("/Users/mekline/Dropbox/_Projects/Jokes - fMRI/Jokes-Replication-Analysis/analysis_pipeline")
meansig_outputs_folder = '/Users/mekline/Dropbox/_Projects/Jokes - fMRI/Jokes-Replication-Analysis/meansignal_outputs/'
########
#READ IN DATA
########
#Here, we read in all those files, calculate a whole passle of mean and standard error bars, and then make graphs
# Add in the contrast and ROI names so it's not just numbers!!!!! (This ordering comes from the
# standard ordering produced by the 2nd level analyses; we'll arrange differently in the plots)
RHLangROI.Names = c('RPost Temp', 'RAnt Temp', 'RAngG', 'RIFG',      'RMFG',     'RIFG orb');
LangROI.Names = c('LPost Temp', 'LAnt Temp', 'LAngG', 'LIFG',      'LMFG',     'LIFG orb');
MDROI.Names = c('LIFG op',  'RIFG op', 'LMFG',    'RMFG',    'LMFG orb',
'RMFG orb', 'LPrecG', 'RPrecG',  'LInsula', 'RInsula',
'LSMA',    'RSMA',   'LPar Inf', 'RPar Inf', 'LPar Sup',
'RPar Sup', 'LACC',   'RACC');
ToMROI.Names = c('DM PFC', 'LTPJ',  'MM PFC', 'PC',
'RTPJ',  'VM PFC', 'RSTS');
normal.contrasts = c('joke', 'lit', 'joke-lit')
custom.contrasts = c('low','med','high','other')
# myResults = read.csv(paste(meansig_outputs_folder, 'RHLangfROIsrespNonlitJokes.csv', sep='')%>%
#   mutate(ROIName = RHLangROI.Names[ROI]) %>%
#   mutate(contrastName = normal.contrasts[Contrast])%>%
#   mutate(Group = 'RHLang')
# allSigChange = myResults
#
# myResults = read.csv('LangfROIsrespNonlitJokes.csv') %>%
#   mutate(ROIName = LangROI.Names[ROI]) %>%
#   mutate(contrastName = normal.contrasts[Contrast])%>%
#   mutate(Group = 'LHLang')
# allSigChange = rbind(allSigChange, myResults)
#
# myResults = read.csv('MDfROIsrespNonlitJokes.csv') %>%
#   mutate(ROIName = MDROI.Names[ROI]) %>%
#   mutate(contrastName = normal.contrasts[Contrast]) %>%
#   mutate(Group = 'MDAll')
# allSigChange = rbind(allSigChange, myResults)
#
# #Little extra thing here, rename MD to split by L and R hemisphere!
# allSigChange[(allSigChange$Group == 'MDAll') & (allSigChange$ROI %%2 == 1),]$Group = 'MDLeft'
# allSigChange[(allSigChange$Group == 'MDAll') & (allSigChange$ROI %%2 == 0),]$Group = 'MDRight'
myResults = read.csv(paste(meansig_outputs_folder, 'ToMfROIS_resp_Jokes_preliminary_20170612.csv', sep=''))%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'ToM')
# %>%
# filter(ROIName !="VM PFC")
# allSigChange = rbind(allSigChange, myResults)
allSigChange = myResults
# myResults = read.csv('NewToMfROIsresCustomJokes.csv')%>%
#   mutate(ROIName = ToMROI.Names[ROI]) %>%
#   mutate(contrastName = custom.contrasts[Contrast])%>%
#   mutate(Group = 'ToMCustom')%>%
#   #filter(ROIName !="VM PFC")
# allSigChange = rbind(allSigChange, myResults)
#
#########
# TRANSFORMATIONS
#########
#First, in addition to the by-region signal changes, we are going to give each person an average signal change value for each localizer
avgSigChange = aggregate(allSigChange$sigChange, by=list(allSigChange$Group,allSigChange$SubjectNumber,allSigChange$contrastName), mean)
names(avgSigChange) = c('Group','SubjectNumber', 'contrastName','sigChange')
avgSigChange$ROIName = 'LocalizerAverage'
avgSigChange$ROI = 0
allSigChange <- allSigChange %>%
dplyr::select(one_of(c('Group','ROIName', 'ROI','SubjectNumber', 'contrastName','sigChange')))
allSigChange <- rbind(allSigChange, avgSigChange)
#Drop the contrasts we're not interested in...
toGraph = allSigChange %>%
filter(contrastName %in% c('joke','lit','high','med','low'))
#Next, get the table that we'll be making the graphs from: for each region (including the average region), take all
#the individual signal changes and calculate a mean and a standard error
sterr <- function(mylist){
my_se = sd(mylist)/sqrt(length(mylist))
return(my_se)
}
mystats = aggregate(toGraph$sigChange, by=list(toGraph$Group, toGraph$ROIName, toGraph$ROI,toGraph$contrastName), mean)
names(mystats) = c('Group','ROIName', 'ROI','contrastName', 'themean')
myster = aggregate(toGraph$sigChange, by=list(toGraph$Group, toGraph$ROIName, toGraph$ROI,toGraph$contrastName), sterr)
names(myster) = c('Group','ROIName', 'ROI','contrastName', 'sterr')
mystats = merge(mystats,myster)
mystats$se_up = mystats$themean + mystats$sterr
mystats$se_down = mystats$themean - mystats$sterr
#Print out a simple summary for mega-graphs
avgz <- filter(mystats, ROIName == 'LocalizerAverage')
write.csv(avgz, 'jokes_localizer_avg.csv')
#Edit! We should be doing bootstrapped 95% confidence intervals instead! calculate them from allSigChange
#then merge into mystats
bootup <- function(mylist){
foo <- bootstrap(mylist, 1000, mean)
return(quantile(foo$thetastar, 0.975)[1])
}
bootdown <- function(mylist){
foo <- bootstrap(mylist, 1000, mean)
return(quantile(foo$thetastar, 0.025)[1])
}
mybootup = aggregate(toGraph$sigChange, by=list(toGraph$Group, toGraph$ROIName, toGraph$ROI, toGraph$contrastName), bootup)
names(mybootup) = c('Group','ROIName', 'ROI','contrastName', 'bootup')
mybootdown = aggregate(toGraph$sigChange, by=list(toGraph$Group, toGraph$ROIName, toGraph$ROI, toGraph$contrastName), bootdown)
names(mybootdown) = c('Group','ROIName', 'ROI','contrastName', 'bootdown')
mystats = merge(mystats,mybootup)
mystats = merge(mystats,mybootdown)
#########
# Effect size reports
#########
#For the main analysis in the paper (signal change jokes>nonjokes) we'll report  a simple measure of effect size: the
#mean signal change in each system. Here they are:
eff <- mystats %>%
filter(ROIName == 'LocalizerAverage') %>%
filter(contrastName == 'joke' | contrastName == 'lit') %>%
dplyr::select(Group, contrastName,themean) %>%
spread(contrastName, themean) %>%
mutate(sigChange = joke-lit)
eff
